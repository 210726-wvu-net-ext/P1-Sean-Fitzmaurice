# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
     - main
  paths:
    include:
    - P1-Sean-Fitzmaurice
   
pr:
  branches:
    include:
    - main
  paths:
    include:
    - P1-Sean-Fitzmaurice

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: 'RestaurantReviews'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VisualStudioTestPlatformInstaller@1
      inputs:
        packageFeedSelector: 'nugetOrg'
        versionSelector: 'latestPreRelease'
        
    - task: SonarCloudPrepare@1
      displayName: sonar prepare
      inputs:
        SonarCloud: 'SONAR_TOKEN'
        organization: '210726-wvu-net-ext'
        scannerMode: 'MSBuild'
        projectKey: '210726-wvu-net-ext_P1-Sean-Fitzmaurice'
        projectName: 'P1-Sean-Fitzmaurice'
        workingDirectory: $(solution)
        
        
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        workingDirectory: $(solution)

    - task: VSTest@2
      displayName: 'VsTest - testAssemblies'
      inputs:
        testAssemblyVer2: |
         **\*Test*.dll
         !**\obj\**
        codeCoverageEnabled: true
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: SonarCloudAnalyze@1
      displayName: sonar analyze

    - task: SonarCloudPublish@1
      displayName: sonar publish gate
      inputs:
        pollingTimeoutSec: '300'

    - script: dotnet publish
        --configuration Release
        --output $(Build.StagingDirectory)
      displayName: dotnet publish
      workingDirectory: $(solution)
