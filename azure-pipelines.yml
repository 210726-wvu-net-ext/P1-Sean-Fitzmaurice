# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
     - main
  paths:
    include:
    - P1-Sean-Fitzmaurice
   
pr:
  branches:
    include:
    - main
  paths:
    include:
    - P1-Sean-Fitzmaurice

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/RestaurantReviews/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'VsTest - testAssemblies'
      inputs:
        testAssemblyVer2: |
         **\*Test*.dll
         !**\obj\**
        codeCoverageEnabled: true
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'Revature-Project1/*.sln'
        feedsToUse: 'select'
        
    - task: SonarCloudPrepare@1
      displayName: sonar prepare
      inputs:
        SonarCloud: $(secrets.SONAR_TOKEN) 
        organization: '210726-wvu-net-ext'
        scannerMode: 'MSBuild'
        projectKey: '210726-wvu-net-ext_P1-Sean-Fitzmaurice'
        extraProperties: |
          sonar.exclusions=**/lib/**/*
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml
    - script: dotnet build --configuration Release
      displayName: dotnet build
      workingDirectory: 'RestaurantReviews'
   #xPlat because MS code coverage tool not good. included in xunit. Make sure to check output file type opencover in this case is all thats needed
    - script: dotnet test
        --configuration Release
        --collect:"XPlat Code Coverage"
        --results-directory $(Agent.TempDirectory)
        --
        DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      displayName: dotnet test
      workingDirectory: 'RestaurantReviews'

    - script: dotnet publish
        --configuration Release
        --output $(Build.StagingDirectory)
      displayName: dotnet publish
      workingDirectory: 'RestaurantReviews'







